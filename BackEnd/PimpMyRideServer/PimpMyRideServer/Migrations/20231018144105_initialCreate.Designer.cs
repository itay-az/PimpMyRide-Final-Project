// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PimpMyRideServer.Data;

#nullable disable

namespace PimpMyRideServer.Migrations
{
    [DbContext(typeof(GarageContext))]
    [Migration("20231018144105_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PimpMyRideServer.Models.Car", b =>
                {
                    b.Property<string>("carId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("carEngine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("carKilometer")
                        .HasColumnType("int");

                    b.Property<string>("carManufacture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("carModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("carYear")
                        .HasColumnType("int");

                    b.Property<string>("clientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("vinNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("carId");

                    b.HasIndex("clientId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("PimpMyRideServer.Models.CarProblem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("carProblem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CarProblems");
                });

            modelBuilder.Entity("PimpMyRideServer.Models.CarService", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.HasKey("id");

                    b.ToTable("CarService");
                });

            modelBuilder.Entity("PimpMyRideServer.Models.CauseOfArrival", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CauseOfArrival");
                });

            modelBuilder.Entity("PimpMyRideServer.Models.Client", b =>
                {
                    b.Property<string>("clientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("clientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("PimpMyRideServer.Models.Manufacture", b =>
                {
                    b.Property<string>("manufacturerName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("manufacturerName");

                    b.ToTable("Manufacture");

                    b.HasData(
                        new
                        {
                            manufacturerName = "Mazda"
                        },
                        new
                        {
                            manufacturerName = "BMW"
                        },
                        new
                        {
                            manufacturerName = "Toyota"
                        });
                });

            modelBuilder.Entity("PimpMyRideServer.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("manufacturerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Model");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            manufacturerName = "Mazda",
                            model = "3"
                        },
                        new
                        {
                            Id = 2,
                            manufacturerName = "Mazda",
                            model = "6"
                        },
                        new
                        {
                            Id = 3,
                            manufacturerName = "Mazda",
                            model = "CX-5"
                        },
                        new
                        {
                            Id = 4,
                            manufacturerName = "BMW",
                            model = "3 Series"
                        },
                        new
                        {
                            Id = 5,
                            manufacturerName = "BMW",
                            model = "4 Series"
                        },
                        new
                        {
                            Id = 6,
                            manufacturerName = "BMW",
                            model = "5 Series"
                        },
                        new
                        {
                            Id = 7,
                            manufacturerName = "Toyota",
                            model = "Corolla"
                        },
                        new
                        {
                            Id = 8,
                            manufacturerName = "Toyota",
                            model = "Auris"
                        },
                        new
                        {
                            Id = 9,
                            manufacturerName = "Toyota",
                            model = "Verso"
                        });
                });

            modelBuilder.Entity("PimpMyRideServer.Models.Part", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("partName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("Part");
                });

            modelBuilder.Entity("PimpMyRideServer.Models.Suppliers", b =>
                {
                    b.Property<int>("supplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("supplierId"));

                    b.Property<string>("supplierAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("supplierContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("supplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("supplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("PimpMyRideServer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobTitle")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PimpMyRideServer.Models.Worker", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<long>("bankAccountNumber")
                        .HasColumnType("bigint");

                    b.Property<float>("hourFee")
                        .HasColumnType("real");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("seniority")
                        .HasColumnType("real");

                    b.Property<string>("workerAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("workerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("workerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("workerPosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Worker");
                });

            modelBuilder.Entity("PimpMyRideServer.Models.WorkerHours", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Workerid")
                        .HasColumnType("int");

                    b.Property<DateTime>("entryTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("exitTimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("Workerid");

                    b.ToTable("WorkerHours");
                });

            modelBuilder.Entity("PimpMyRideServer.Models.Car", b =>
                {
                    b.HasOne("PimpMyRideServer.Models.Client", "Client")
                        .WithMany("cars")
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("PimpMyRideServer.Models.WorkerHours", b =>
                {
                    b.HasOne("PimpMyRideServer.Models.Worker", null)
                        .WithMany("workerHour")
                        .HasForeignKey("Workerid");
                });

            modelBuilder.Entity("PimpMyRideServer.Models.Client", b =>
                {
                    b.Navigation("cars");
                });

            modelBuilder.Entity("PimpMyRideServer.Models.Worker", b =>
                {
                    b.Navigation("workerHour");
                });
#pragma warning restore 612, 618
        }
    }
}
